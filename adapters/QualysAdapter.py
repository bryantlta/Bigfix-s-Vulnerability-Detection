class QualysAdapter(IVAAdapter):
    def __init__(self):
        self.config = ConfigManager()
        self.assets = self.computeAssetObjects()

        for asset in self.assets:
            cves = self.mapCves(asset)
            asset.updateCves(cves)
    
    def computeAssetObjects(self):
        uri = "/asset/host/?action=list"
        resObj = self.getRequest(self.config.server, self.config.port, self.config.user, self.config.password, uri)

        xmlstr = resObj._content.decode("utf-8")

        from xml.etree import cElementTree as ET 
        hostList = list(list(list(ET.fromstring(xmlstr))[0])[0])[0]
        
        assets = []
        for host in list(hostList):
            hostId, hostIp = list(host)[0], list(host)[1]
            hostName = self.getHostName(hostIp)
            newAsset = Asset(hostName, hostId, None, None, [], hostIp)
            assets.append(newAsset)
        return assets
    
    def getHostName(self, ip):
        import socket
        hostname = socket.gethostbyaddr(ip)[0]
        index = hostname.find('.')
        hostname = hostname[0:index]
        return hostname 

    def mapCves(self, asset):
        uri = "/asset/patch/index.php&host_id={}&output_format=xml".format(asset.assetId)
        resObj = self.getRequest(self.config.server, self.config.port, self.config.user, self.config.password, uri)

        xmlstr = resObj._content.decode("utf-8")

        from xml.etree import cElementTree as ET 
        xml = ET.fromstring(xmlstr)
        doctype = list(xml)[0]
        patch_list_output = list(doctype)[0]
        response = list(patch_list_output)[0]
        patch_info_list = list(response)[8]
        patch_info = list(patch_info_list)[0]
        cves = list(patch_info)[1]
        patch_severity = list(patch_info)[2]

        newCves = []

        for cve in cves:
            newCve = CVE(cve.text.strip(), None, None, patch_severity.text)
            newCves.append(newCve)
        
        return newCves