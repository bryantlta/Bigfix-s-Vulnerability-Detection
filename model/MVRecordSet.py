import json

class MVRecordSet:
    def __init__(self, assets):
        self.assets = assets
        self.config = ConfigManager()
        self.recordSet = self.makeRecordSet()
    
    def makeRecordSet(self):
        time = self.makeName()
        name = time + " - Data"
        postStreamString = '<?xml version=\"1.0"?>\
            \n<BESAPI>\n<DashboardData>\n<Dashboard>' + 'MVScan.ojo'\
            + '</Dashboard>\n<Name>' + name + '</Name>\n<IsPrivate>false</IsPrivate>\n<Value>{"name":"' + name + '","timestamp":"'\
            + time + '","vendor":"' + self.config.name + '","version":"1.0","assets":['
        
        for i in range(len(self.assets)):
            if i > 0:
                postStreamString = postStreamString + ","

            computer = {}

            computer['fqdn'] = self.assets[i].getFqdn()
            computer['besid'] = self.assets[i].getBesid()

            totalRisk = 0

            if (self.assets[i].getCves()):
                preCVEs = self.assets[i].getCves()
                cves = []

                for i in range(len(preCVEs)):
                    index = len(preCVEs) - i - 1

                    cve = {}
                    cve['id'] = preCVEs[index].getId.strip().replace('CVE-', '')
                    cve['risk'] = preCVEs[index].getSeverityScore
                    cves.append(cve)

                    try:
                        totalRisk = totalRisk + int(cve['risk'])
                    except:
                        totalRisk = totalRisk

                computer['cves'] = cves
                computer['risk'] = totalRisk

            else:
                cve = {}
                cve['id'] = '8888-8888'
                cve['risk'] = 1
                computer['cves'] = [cve]
                computer['risk'] = 1

            postStreamString += json.dumps(computer)
        
        postStreamString = postStreamString + ']}\n</Value>\n</DashboardData>\n</BESAPI>'
        return postStreamString

    def makeName(self):
        import datetime
        time = datetime.datetime.now()

        month = str(time.month) + '1' + ''
        if (len(month) != 2):
            month = '0' + month

        dayOfMonth = str(time.day) + ''
        if (len(dayOfMonth) != 2):
            dayOfMonth = '0' + dayOfMonth

        hour = str(time.hour) + ''
        if (len(hour) != 2):
            hour = '0' + hour

        minutes = str(time.minute) + ''
        if (len(minutes) != 2):
            minutes = '0' + minutes

        seconds = str(time.second) + ''
        if (len(seconds) != 2):
            seconds = '0' + seconds

        name = '' + str(time.year) + '' + month + '' + dayOfMonth + '.' + hour + '' + minutes + '' + seconds + '.201.1'
        return name