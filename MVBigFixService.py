class MVBigFixService:
    import requests

    def __init__(self):
        self.config = ConfigManager()
        self.mvImportService = MVImportService()
        self.mvRecordSet = MVRecordSet(self.mvImportService.adapter.assets)
        self.postToBigfix()

    def postToBigfix(self):
        try:
            names = self.getDashboard()
            self.deleteDashboards(names)
        except:
            pass
    
        self.postDashboard()

    def getDashboard(self):
        uri = '/api/dashboardvariables/MVScan.ojo'
        resObj = requests.get('https://{}:{}{}'.format(self.config.server, self.config.port, uri), auth=(self.config.username, self.config.password), verify = False)
        
        xmlstr = resObj._content.decode("utf-8")
        names = []

        from xml.etree import cElementTree as ET 
        besApi = ET.fromstring(xmlstr)
        for dashboard in besApi:
            name = dashboard[1]
            names.append(name.text)
        
        return names

    def deleteDashboards(self, names):
        for name in names:
            uri = '/api/dashboardvariable/MVScan.ojo/' + name
            requests.delete('https://{}:{}{}'.format(self.server, self.port, uri)\
            , auth=(self.user, self.password), verify = False)


    def postDashboard(self):
        path = '/api/dashboardvariables/MVScan.ojo'
        header = {'Content-Type': 'text/xml'}
        requests.post('https://{}:{}{}'.format(self.server, self.port, path)\
            , auth=(self.user, self.password), verify = False, data = self.mvRecordSet, headers = header)
        